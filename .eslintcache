[{"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx":"1","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js":"2","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\app.jsx":"3","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\components\\Search.jsx":"4","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\components\\VideoList.jsx":"5","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\container\\ListContainer.jsx":"6","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\index.js":"7","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\service\\youtube.js":"8","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\components\\VideoDetail.jsx":"9"},{"size":88,"mtime":1609907941391,"results":"10","hashOfConfig":"11"},{"size":219,"mtime":1609907770829,"results":"12","hashOfConfig":"11"},{"size":1904,"mtime":1612358545150,"results":"13","hashOfConfig":"14"},{"size":1004,"mtime":1612358042927,"results":"15","hashOfConfig":"14"},{"size":841,"mtime":1612357977501,"results":"16","hashOfConfig":"14"},{"size":443,"mtime":1612356451228,"results":"17","hashOfConfig":"14"},{"size":494,"mtime":1612361166205,"results":"18","hashOfConfig":"14"},{"size":716,"mtime":1612361193866,"results":"19","hashOfConfig":"14"},{"size":651,"mtime":1612357850848,"results":"20","hashOfConfig":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zd24t9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18krz9i",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\app.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\template\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\app.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\components\\Search.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\components\\VideoList.jsx",["40"],"import React, {memo} from 'react';\r\nimport styles from './VideoList.module.css';\r\n\r\nconst VideoList = memo(\r\n    ({video, video : {snippet}, onVideoClick, display }) => {\r\n        const displayType = display === 'list' ? styles.list : styles.grid;\r\n        return (\r\n            <li className={`${styles.container} ${displayType}`} onClick={() => onVideoClick(video)}>\r\n                <div className={styles.video}>\r\n                    <img className={styles.thumbnail} src={snippet.thumbnails.medium.url}/>\r\n                    <div className={styles.metadata}>\r\n                        <p className={styles.title}>{snippet.title}</p>\r\n                        <p className={styles.channel}>{snippet.channelTitle}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n);\r\n\r\nexport default VideoList;","C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\container\\ListContainer.jsx",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\index.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\service\\youtube.js",[],"C:\\Users\\BOM\\Desktop\\projects\\react-basic\\youtube\\src\\components\\VideoDetail.jsx",[],{"ruleId":"41","severity":1,"message":"42","line":10,"column":21,"nodeType":"43","endLine":10,"endColumn":92},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]